services:
#───────────────────────────────────────────────────────────────────────────────
#  Front-end  (Next.js)
#───────────────────────────────────────────────────────────────────────────────
  frontend:
    image: neaitaskbot/taskbot-portal:1.0
    container_name: taskbot-frontend
    environment:
      NODE_ENV: production
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Python installer / licence API  (Flask)
#───────────────────────────────────────────────────────────────────────────────
  installer:
    image: neaitaskbot/taskbot-installer:1.0
    container_name: taskbot-installer
    environment:
      TASKBOT_DEPLOY_MODE: ${TASKBOT_DEPLOY_MODE:-ONPREMISE}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT:-5000}
    volumes:
      - installer-data:/data
      - ./keys:/etc/taskbot/keys:ro
      - ./certs:/etc/taskbot/certs:ro
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Java Taskbot Gateway (Spring Boot)
#───────────────────────────────────────────────────────────────────────────────
  gateway:
    image: neaitaskbot/taskbot-gw:1.0
    container_name: taskbot-gateway
    environment:
      CORE_API_URL: "http://taskbot-api-service:${TASKBOT_API_INTERNAL_PORT:-18902}"
      # Optional routes are disabled in code via @ConditionalOnProperty
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - taskbot-api-service
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Java Taskbot API Service (Spring Boot)
#───────────────────────────────────────────────────────────────────────────────
  taskbot-api-service:
    image: neaitaskbot/taskbot-api:1.0
    container_name: taskbot-api-service
    environment:
      # ── Core Application Settings ──────────────────────────────────────────
      ACTIVE_PROFILE: "prod"
      RUNNING_ON_CLUSTER: "false"
      LOG_LEVEL: ${LOG_LEVEL_API:-INFO}

      # ── Security & Authentication ──────────────────────────────────────────
      JWT_SECRET: ${JWT_SECRET}
      LICENSE_PUBLIC_KEY_B64: ${LICENSE_PUBLIC_KEY_B64}

      # ── Database & Broker Connections ─────────────────────────────────────
      JDBC_URL: "jdbc:mariadb://mariadb:3306/${MARIADB_DATABASE_NAME:-nucleus}?zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false"
      JDBC_USR: ${MARIADB_USER:-nucleus_user}
      JDBC_PWD: ${MARIADB_PASSWORD:-secretpassword}
      SPRING_DATA_MONGODB_URI: "mongodb://${MONGODB_ROOT_USERNAME:-mongoadmin}:${MONGODB_ROOT_PASSWORD:-secretmongopassword}@mongodb:27017/${MARIADB_DATABASE_NAME:-nucleus}?authSource=admin"
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER:-rabbituser}
      RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS:-rabbitpassword}
      TASK_RUN_REQ_EXCH: "kk_task_run_req_exch"
      TASK_RUN_REQ_QUEUE: "kk_task_run_request"
      TASK_RUN_REQ_ROUTE_KEY: "run_task"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PWD: ${REDIS_PASSWORD:-secretredispassword}

      # ── Internal & External Endpoints ─────────────────────────────────────
      CORE_API_ENDPOINT: "http://taskbot-api-service:${TASKBOT_API_INTERNAL_PORT:-18902}"
      FRONT_ENDPOINT: "http://${PUBLIC_DOMAIN:-localhost}"

      # ── Optional Features (Disabled by Default for On-Premise) ───────────
      aws.s3.enabled: "false"

    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - mariadb
      - redis
      - rabbitmq
      - mongodb
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Databases & queues
#───────────────────────────────────────────────────────────────────────────────
  mariadb:
    image: neaitaskbot/taskbot-mariadb:1.0
    container_name: taskbot-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: "${MARIADB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MARIADB_DATABASE_NAME:-nucleus}"
      MYSQL_USER: "${MARIADB_USER:-nucleus_user}"
      MYSQL_PASSWORD: "${MARIADB_PASSWORD:-secretpassword}"
    volumes:
      - ${DATA_PATH_BASE:-./taskbot-data}/mariadb:/var/lib/mysql
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

  redis:
    image: redis:7.2
    container_name: taskbot-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - ${DATA_PATH_BASE:-./taskbot-data}/redis:/data
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: taskbot-rabbitmq
    hostname: taskbot-rabbit
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    volumes:
      - ${DATA_PATH_BASE:-./taskbot-data}/rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672" # Management UI
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

  mongodb:
    image: mongo:4.4
    container_name: taskbot-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_ROOT_PASSWORD}"
    volumes:
      - ${DATA_PATH_BASE:-./taskbot-data}/mongodb:/data/db
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Nginx reverse-proxy
#───────────────────────────────────────────────────────────────────────────────
  nginx:
    image: nginx:1.27-alpine
    container_name: taskbot-nginx
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - frontend
      - installer
      - gateway
    restart: unless-stopped

volumes:
  installer-data: