services:
#───────────────────────────────────────────────────────────────────────────────
#  Front-end  (Next.js)
#───────────────────────────────────────────────────────────────────────────────
  frontend:
    image: neaitaskbot/taskbot-portal:1.0
    container_name: taskbot-frontend
    env_file:
      - .env.frontend
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Python installer / licence API  (Flask)
#───────────────────────────────────────────────────────────────────────────────
  installer:
    image: neaitaskbot/taskbot-installer:1.0
    container_name: taskbot-installer
    env_file:
      - .env.installer
    environment:
      TASKBOT_DEPLOY_MODE: ${TASKBOT_DEPLOY_MODE:-ONPREMISE}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT:-5000}
      DATABASE_URL: sqlite:////data/installer.db
      SSH_KEY_PATH: /data/ssh_keys      
      CORS_ORIGINS: ${CORS_ORIGINS}
    ports:
      - "127.0.0.1:5001:5001"
    extra_hosts:
      - "host.docker.internal:host-gateway"      
    volumes:
      - installer-data:/data
      - ./keys:/etc/taskbot/keys:ro
      - ./certs:/etc/taskbot/certs:ro
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Java Taskbot Gateway (Spring Boot)
#───────────────────────────────────────────────────────────────────────────────
  gateway:
    image: neaitaskbot/taskbot-gw:1.0
    container_name: taskbot-gateway
    env_file:
      - .env.gateway
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - taskbot-api-service
    restart: unless-stopped

#───────────────────────────────────────────────────────────────────────────────
#  Java Taskbot API Service (FULLY DYNAMIC)
#───────────────────────────────────────────────────────────────────────────────
  taskbot-api-service:
    image: neaitaskbot/taskbot-api:1.0
    container_name: taskbot-api-service
    restart: unless-stopped
    # This block is now fully dynamic, reading all values from the .env file
    env_file:
      - .env
    volumes:
      - uploads-data:/storage/uploads
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - mariadb
      - redis
      - rabbitmq
      - mongodb

#───────────────────────────────────────────────────────────────────────────────
#  Databases & Queues (UPDATED CREDENTIALS & PORTS)
#───────────────────────────────────────────────────────────────────────────────
  mariadb:
    image: mariadb:11.3
    container_name: taskbot-mariadb
    restart: unless-stopped
    environment:
      # Use the new credentials from the .env file
      MYSQL_ROOT_PASSWORD: "${JDBC_PWD}"
      MYSQL_DATABASE: "nucleus" # This name is fixed in the JDBC_URL
      MYSQL_USER: "${JDBC_USR}"
      MYSQL_PASSWORD: "${JDBC_PWD}"
    volumes:
      - mariadb-data:/var/lib/mysql

  redis:
    image: redis:7.2
    container_name: taskbot-redis
    restart: unless-stopped
    # Use the new password and specify the internal port
    command: ["redis-server", "--port", "6379", "--requirepass", "${REDIS_PWD}"]
    ports:
      - "26379:6379" # Expose the new port 26379
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: taskbot-rabbitmq
    restart: unless-stopped
    environment:
      # Use the new credentials from the .env file
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USERNAME}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    ports:
      - "5672:5672"
      - "15672:15672"

  mongodb:
    image: mongo:4.4
    container_name: taskbot-mongodb
    ports:
      - "27017:27017"    
    restart: unless-stopped
    environment:
      # Use the new credentials from the .env file
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    volumes:
      - mongodb-data:/data/db

#───────────────────────────────────────────────────────────────────────────────
#  Nginx reverse-proxy (No changes needed here)
#───────────────────────────────────────────────────────────────────────────────
  nginx:
    image: nginx:1.27-alpine
    container_name: taskbot-nginx
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro
      # Mount the shared volume for serving local uploads (read-only for security)
      - uploads-data:/var/www/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    depends_on:
      - frontend
      - installer
      - gateway
    restart: unless-stopped

volumes:
  installer-data:
  uploads-data:
  mariadb-data:
  redis-data:
  rabbitmq-data:
  mongodb-data: